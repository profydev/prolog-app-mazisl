name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NEXT_PUBLIC_API_BASE_URL: ${{vars.NEXT_PUBLIC_API_BASE_URL}}
  VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
  VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci

  lint:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci
      - run: npm run lint:code || true
      - run: npm run lint:styles || true
      - run: npm run check:types || true

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v3
      - name: Install vercel CLI
        run: npm install --global vercel@latest
      - name: Pull vercel environment info
        run: vercel pull --yes --token=${{secrets.VERCEL_TOKEN}}
      - name: Build project artifacts
        run: vercel build --token=${{secrets.VERCEL_TOKEN}}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            .next/
            .vercel/

  e2e:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - run: npm ci
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          start: npm start

  deploy-preview:
    runs-on: ubuntu-latest
    needs: e2e
    if: github.event_name == 'pull_request'
    outputs:
      preview_url: ${{ steps.deploy.outputs.preview_url }}
    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: Deploy project artifacts to vercel
        id: deploy
        run: |
          DEPLOY_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview_url=${DEPLOY_URL}" >> $GITHUB_ENV
          echo "::set-output name=preview_url::${DEPLOY_URL}"

  comment-preview-url:
    runs-on: ubuntu-latest
    needs: deploy-preview
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v3
      - name: Comment on PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PREVIEW_URL="${{ needs.deploy-preview.outputs.preview_url }}"
          if [ -n "$PREVIEW_URL" ]; then
            COMMENT="Preview deployment available: $PREVIEW_URL"
            gh pr comment ${{ github.event.pull_request.number }} --body "$COMMENT"
          fi

  deploy-production:
    runs-on: ubuntu-latest
    needs: e2e
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: Deploy project artifacts to vercel (production)
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
